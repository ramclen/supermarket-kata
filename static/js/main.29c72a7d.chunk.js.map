{"version":3,"sources":["components/Product.js","components/ProductList.js","actions/index.js","services/DiscountHandler.js","services/DigitFormat.js","services/PriceHandler.js","components/Subtotal.js","components/SavingSection.js","components/App.js","serviceWorker.js","reducers/index.js","index.js","actions/types.js"],"names":["Product","title","price","amount","onAdd","onSet","className","onClick","type","value","onChange","evt","target","parseFloat","connect","state","products","addProduct","product","ADD_PRODUCT","payload","setProduct","SET_PRODUCT","productsList","Object","keys","map","key","DiscountHandler","discounts","this","bill","name","reduce","acc","discount","total","filter","obj","forceTwoDigits","number","Math","round","toFixed","PriceHandler","prices","calculateSubTotal","priceHandler","id","subtotal","discountHandler","renderDiscount","toLowerCase","applicableDiscounts","getApplicableDiscounts","renderDiscounts","totalSavings","getTotalSavings","useState","setDiscounts","setPrices","useEffect","Beans","floor","Coke","Orange","src","alt","calculateTotal","Boolean","window","location","hostname","match","combineReducers","require","store","createStore","reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29c72a7d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Product = ({ title, price, amount = 0, onAdd, onSet }) => {\n\n  const onChange = (evt) => {\n    if (evt.target.value) {\n      onSet(title, parseFloat(evt.target.value))\n    }\n  }\n\n  return (\n    <div className=\"product-item row mb-3\">\n      <div className=\"col-md-2 col-1 offset-1 offset-md-0 d-flex justify-content-center\">\n        <button onClick={() => onAdd(title)} type=\"button\" className=\"add-btn btn btn-info\">add</button>\n      </div>\n      <div className=\"col-2 d-flex justify-content-center\">\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={onChange}\n          className=\"product-counter w-75 text-center border border-info\" />\n      </div>\n      <div className=\"product-title col-lg-6 col-3\">{title}</div>\n      <div className=\"product-price col-1 text-center\">{price}</div>\n    </div>\n  )\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addProduct, setProduct } from '../actions';\nimport { Product } from './Product';\n\nexport const ProductList = ({ productsList, products, addProduct, setProduct }) => {\n  return (\n    <div className=\"row mb-4\">\n      <div className=\"col-lg-8 offset-lg-2 col-12\">\n        <p className=\"text-info\">Products</p>\n        <div className=\"border border-info border-2 rounded pt-3 pb-1\">\n          {Object.keys(productsList).map(title => (\n            <Product key={title} title={title} price={productsList[title]} amount={products[title]} onSet={setProduct} onAdd={addProduct} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n})\n\nexport default connect(mapStateToProps, { addProduct, setProduct })(ProductList);","import { ADD_PRODUCT, SET_PRODUCT } from \"./types\"\n\nexport const addProduct = (product, amount = 1) => {\n  return {\n    type: ADD_PRODUCT,\n    payload: { product, amount }\n  }\n}\n\nexport const setProduct = (product, amount = 1) => {\n  return {\n    type: SET_PRODUCT,\n    payload: { product, amount }\n  }\n}","\n\nexport class DiscountHandler {\n  constructor(discounts) {\n    this.discounts = discounts;\n  }\n\n  /**\n   * It returns the total discount that would produce the passed bill\n   * @param  {} bill\n   * @returns {number}\n   */\n  getTotalSavings(bill) {\n    return Object.keys(this.discounts)\n      .map(name => this.discounts[name](bill[name] ? bill[name] : 0))\n      .reduce((acc, discount) => acc + parseFloat(discount), 0)\n  }\n\n  /**\n   * It returns an object with all applicable discount for the passed bill.\n   * Object is structure with keys as the name of product and the total discount is the value\n   * @param  {Object} bill\n   * @returns {Object} discounts\n   */\n  getApplicableDiscounts(bill) {\n    return Object.keys(this.discounts)\n      .map(name => ({ name, total: this.discounts[name](bill[name]) }))\n      .filter(discount => discount.total > 0)\n      .reduce((obj, discount) => ({ ...obj, [discount.name]: discount.total }), {})\n  }\n}\n","export const forceTwoDigits = (number) => {\n  return (Math.round(number * 100) / 100).toFixed(2)\n}","export class PriceHandler {\n  constructor(prices) {\n    this.prices = prices;\n  }\n\n  /**\n   * it calculates subTotal from a bill using prices on the constructor\n   * @param  {} bill\n   */\n  calculateSubTotal(bill) {\n    return Object\n      .keys(bill)\n      .map(name => bill[name] * parseFloat(this.prices[name]))\n      .reduce((acc, price) => acc + price, 0);\n  }\n\n  /**\n   * It calculates the total, if discount passed will subtract from the total\n   * @param  {} bill\n   * @param  {number} discount = 0\n   */\n  calculateTotal(bill, discount = 0) {\n    return this.calculateSubTotal(bill) - discount;\n  }\n\n}\n","import React from \"react\";\nimport { PriceHandler } from \"../services/PriceHandler\";\nimport { forceTwoDigits } from '../services/DigitFormat';\nimport { connect } from \"react-redux\";\n\nconst SubTotal = ({ prices, products }) => {\n\n  let priceHandler = new PriceHandler(prices);\n\n  const calculateSubTotal = () => {\n    const subtotal = priceHandler.calculateSubTotal(products);\n    return forceTwoDigits(subtotal);\n  }\n\n  return (\n    <div className=\"subtotal-section row mt-1\">\n      <div className=\"col-lg-3 col-4 offset-lg-6 offset-1 font-weight-bold\">Sub-total</div>\n      <div id=\"subtotal\" className=\"col-2\">{calculateSubTotal()}</div>\n    </div>\n  )\n}\n\nconst mapToProps = state => ({\n  products: state.products\n})\n\nexport default connect(mapToProps)(SubTotal)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DiscountHandler } from \"../services/DiscountHandler\";\nimport { forceTwoDigits } from '../services/DigitFormat';\n\nconst SavingSection = ({ discounts, products }) => {\n  const discountHandler = new DiscountHandler(discounts)\n\n  const renderDiscounts = () => {\n    const applicableDiscounts = discountHandler.getApplicableDiscounts(products)\n    return Object.keys(applicableDiscounts).map(key => renderDiscount(key, applicableDiscounts[key]))\n  }\n\n  const renderDiscount = (name, value) => {\n    return (\n      <div key={name} className=\"row \">\n        <div className=\"col-lg-3 col-4 offset-lg-6 offset-1\">{name}</div>\n        <div id={`${name.toLowerCase()}-discount`} className=\"col-2\">{forceTwoDigits(-value)}</div>\n      </div>\n    )\n  }\n\n  const getTotalSavings = () => {\n    const totalSavings = discountHandler.getTotalSavings(products)\n    return forceTwoDigits(-totalSavings)\n  }\n\n  return (\n    <div>\n      <div className=\"row mt-3\">\n        <div className=\"col-lg-3 col-4 offset-lg-6 offset-1 font-weight-bold\">Savings</div>\n      </div>\n      {renderDiscounts()}\n      <hr />\n      <div className=\"row mt-2\">\n        <div className=\"col-lg-3 col-4 offset-lg-6 offset-1 font-weight-bold\">Total savings</div>\n        <div id=\"total-savings\" className=\"col-2 savings-section\">{getTotalSavings()}</div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n})\n\n\nexport default connect(mapStateToProps)(SavingSection);","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport ProductsList from './ProductList';\nimport { DiscountHandler } from '../services/DiscountHandler';\nimport { forceTwoDigits } from '../services/DigitFormat';\nimport { PriceHandler } from '../services/PriceHandler';\nimport SubTotal from './Subtotal';\nimport Savings from './SavingSection';\n\nexport const App = ({ products }) => {\n  const [discounts, setDiscounts] = useState({});\n  const [prices, setPrices] = useState({});\n\n  let discountHandler = new DiscountHandler(discounts);\n  let priceHandler = new PriceHandler(prices);\n\n  useEffect(() => {\n    setDiscounts({\n      Beans: (amount) => Math.floor(amount / 3) * 0.5,\n      Coke: (amount) => Math.floor(amount / 2) * 0.4\n    })\n\n    setPrices({\n      Beans: '0.50',\n      Coke: '0.70',\n      Orange: '1.99/kg'\n    })\n  }, [])\n\n  const calculateTotal = () => {\n    const total = priceHandler.calculateTotal(products, parseFloat(discountHandler.getTotalSavings(products)));\n\n    return forceTwoDigits(total)\n  }\n\n  return (\n    <div className=\"container-fluid App\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <img\n            id=\"trolley\"\n            className=\"img-fluid mx-auto d-block\"\n            src=\"https://cdn.pixabay.com/photo/2020/02/26/07/41/grocery-basket-4880912_960_720.png\" alt=\"Trolley\" />\n        </div>\n      </div>\n\n      <ProductsList productsList={prices} />\n\n      <div className=\"price-section row\">\n        <div className=\"col-lg-8 offset-lg-2 col-12\">\n          <p className=\"text-info\">Total</p>\n          <div className=\"border border-info border-2 rounded pt-3 pb-2\">\n            <SubTotal prices={prices} products={products} />\n\n            <Savings discounts={discounts} />\n            <hr />\n            <div className=\"row mt-2\">\n              <div className=\"col-lg-3 col-4 offset-lg-6 offset-1 font-weight-bold\">Total to pay</div>\n              <div id=\"total\" className=\"col-2 font-weight-bold\">{calculateTotal()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n})\n\nexport default connect(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const { combineReducers } = require(\"redux\");\nconst { ADD_PRODUCT, SET_PRODUCT } = require(\"../actions/types\");\n\nexport default combineReducers({\n  products: (state = {}, { type, payload }) => {\n    if (type === ADD_PRODUCT) {\n      return { ...state, [payload.product]: (state[payload.product] ? state[payload.product] + payload.amount : payload.amount) }\n    }\n    if (type === SET_PRODUCT) {\n      return { ...state, [payload.product]: payload.amount }\n    }\n    return state;\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const SET_PRODUCT = \"SET_PRODUCT\";"],"sourceRoot":""}